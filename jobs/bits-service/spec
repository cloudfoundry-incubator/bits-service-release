---
name: bits-service
templates:
  bits-service_ctl.erb:    bin/bits-service_ctl
  blobstore_waiter.sh.erb: bin/blobstore_waiter.sh
  syslog_utils.sh.erb:     bin/syslog_utils.sh
  dns_health_check.erb:    bin/dns_health_check
  dashboard.erb:           bin/dashboard

  bits_config.yml.erb:        config/bits_config.yml
  signing_users.erb:          config/signing_users
  app_stash_ca_cert.pem.erb:  config/certs/app_stash_ca_cert.pem
  buildpacks_ca_cert.pem.erb: config/certs/buildpacks_ca_cert.pem
  droplets_ca_cert.pem.erb:   config/certs/droplets_ca_cert.pem
  packages_ca_cert.pem.erb:   config/certs/packages_ca_cert.pem
  mutual_ca_cert.pem.erb:     config/certs/mutual_ca_cert.pem
  mutual_client_cert.pem.erb: config/certs/mutual_client_cert.pem
  mutual_client_key.pem.erb:  config/certs/mutual_client_key.pem
  bits_tls.crt.erb:           config/certs/bits_tls.crt
  bits_tls.key.erb:           config/certs/bits_tls.key

packages:
  - bitsgo
  - bits-common

provides:
- name: bits_service_active_signing_key
  type: bits_service_active_signing_key
  properties:
  - 'bits-service.active_signing_key.key_id'
  - 'bits-service.active_signing_key.secret'

properties:
  request_timeout_in_seconds:
    description: "Timeout for requests in seconds."
    default: 900

  bits-service.public_endpoint:
    description: Public endpoint for the Bits Service. Does not include URI scheme.

  bits-service.private_endpoint:
    description: Private endpoint for the Bits Service. Does not include URI scheme.
  bits-service.tls.port:
    description: Post for https endpoint
    default: 443
  bits-service.tls.cert:
    description: The TLS server certificate
  bits-service.tls.key:
    description: The TLS server private key

  bits-service.secret:
    description: |
      The secret used for signing URLs.
      Deprecated: Use active_signing_key and alternative_signing_keys instead and use client side signed URLs through the provided bits_service_active_signing_key BOSH links.
  bits-service.signing_users:
    description: |
     List of Username and Password pairs that are allowed to sign urls. Cloud Controller must use one of these to access the /sign endpoint via HTTP Basic Auth.
    example: |
      signing_users:
      - username: user1
        password: password1
      - username: user2
        password: password2
  bits-service.active_signing_key.key_id:
    description: |
      This is the key ID Bits-Service uses and clients should use to generate signed URLs. When rotating active signing keys, they should first go to
      alternative_signing_keys before removing them completely.
    default: ""
  bits-service.active_signing_key.secret:
    description: |
      This is the key secret Bits-Service uses and clients should use to generate signed URLs. When rotating active signing keys, they should first go to
      alternative_signing_keys before removing them completely.
    default: ""
  bits-service.alternative_signing_keys:
    description: |
      List of alternative access key ID and secret pairs that can be used to sign and validate URLs. Clients should use active_signing_key.key_id
      and active_signing_key.secret to generate signed URLs to make sure they don't use a key that is being removed with the next deployment.
    example: |
      signing_keys:
        - key_id: some_key_id
          secret: some_secret
        - key_id: some_other_key_id
          secret: some_other_secret
    default: []
  bits-service.buildpacks.directory_key:
    description: "Directory (bucket) used to store buildpack blobs."
    default: "buildpacks"
  bits-service.buildpacks.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  bits-service.buildpacks.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  bits-service.buildpacks.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal"
  bits-service.buildpacks.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.buildpacks.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.buildpacks.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
  bits-service.buildpacks.fog_connection:
    description: "Fog connection properties."
    default: null
  bits-service.buildpacks.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. See http://docs.cloudfoundry.org/deploying/common/cc-blobstore-config.html#fog-aws-sse for example configuration."
    default: {}
  bits-service.buildpacks.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"
  bits-service.buildpacks.s3_debug_log_level:
    default: ""
    description: "Specifies log level for low-level S3 logging. Valid values are: LogDebug, LogDebugWithSigning, LogDebugWithHTTPBody, LogDebugWithRequestRetries, LogDebugWithRequestErrors"
  bits-service.buildpacks.gcp_retry_timeout_seconds:
    default: 10
    description: "Specifies a timeout for calls against Google Cloud Storage. Only used when bucket is in Google Cloud and access method is through Google service account."

  bits-service.droplets.directory_key:
    description: "Directory (bucket) used to store droplet blobs."
    default: "droplets"
  bits-service.droplets.fog_connection:
    description: "Fog connection properties."
    default: null
  bits-service.droplets.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. See http://docs.cloudfoundry.org/deploying/common/cc-blobstore-config.html#fog-aws-sse for example configuration."
    default: {}
  bits-service.droplets.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  bits-service.droplets.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  bits-service.droplets.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal"
  bits-service.droplets.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.droplets.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.droplets.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
  bits-service.droplets.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"
  bits-service.droplets.s3_debug_log_level:
    default: ""
    description: "Specifies log level for low-level S3 logging. Valid values are: LogDebug, LogDebugWithSigning, LogDebugWithHTTPBody, LogDebugWithRequestRetries, LogDebugWithRequestErrors"
  bits-service.droplets.gcp_retry_timeout_seconds:
    default: 10
    description: "Specifies a timeout for calls against Google Cloud Storage. Only used when bucket is in Google Cloud and access method is through Google service account."

  bits-service.packages.directory_key:
    description: "Directory (bucket) used to store package blobs."
    default: "packages"
  bits-service.packages.fog_connection:
    description: "Fog connection properties."
    default: null
  bits-service.packages.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. See http://docs.cloudfoundry.org/deploying/common/cc-blobstore-config.html#fog-aws-sse for example configuration."
    default: {}
  bits-service.packages.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  bits-service.packages.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  bits-service.packages.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal"
  bits-service.packages.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.packages.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.packages.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
  bits-service.packages.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"
  bits-service.packages.s3_debug_log_level:
    default: ""
    description: "Specifies log level for low-level S3 logging. Valid values are: LogDebug, LogDebugWithSigning, LogDebugWithHTTPBody, LogDebugWithRequestRetries, LogDebugWithRequestErrors"
  bits-service.packages.gcp_retry_timeout_seconds:
    default: 10
    description: "Specifies a timeout for calls against Google Cloud Storage. Only used when bucket is in Google Cloud and access method is through Google service account."

  bits-service.app_stash.directory_key:
    description: "Directory (bucket) used to store app stash blobs."
    default: "app_stash"
  bits-service.app_stash.fog_connection:
    description: "Fog connection properties."
    default: null
  bits-service.app_stash.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. See http://docs.cloudfoundry.org/deploying/common/cc-blobstore-config.html#fog-aws-sse for example configuration."
    default: {}
  bits-service.app_stash.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  bits-service.app_stash.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  bits-service.app_stash.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal"
  bits-service.app_stash.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.app_stash.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  bits-service.app_stash.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
  bits-service.app_stash.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"
  bits-service.app_stash.minimum_size:
    default: "64K"
    description: "Minimum size of a resource to cache in App-Stash"
  bits-service.app_stash.maximum_size:
    default: "512M"
    description: "Maximum size of a resource to cache in App-Stash"
  bits-service.app_stash.s3_debug_log_level:
    default: ""
    description: "Specifies log level for low-level S3 logging. Valid values are: LogDebug, LogDebugWithSigning, LogDebugWithHTTPBody, LogDebugWithRequestRetries, LogDebugWithRequestErrors"
  bits-service.app_stash.gcp_retry_timeout_seconds:
    default: 10
    description: "Specifies a timeout for calls against Google Cloud Storage. Only used when bucket is in Google Cloud and access method is through Google service account."

  bits-service.buildpack_cache.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"

  bits-service.max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"

  bits-service.logging.level:
    default: "debug"
    description: "Log level for bits-service. See Steno logger for details."

  bits-service.cc_updates.cc_url:
    description: "CloudController endpoint for sending package status updates"
    default: "https://cloud-controller-ng.service.cf.internal:9023/internal/v4/packages"
  bits-service.cc_updates.ca_cert:
    description: "PEM-encoded CA certificate for secure, mutually authenticated TLS communication"
  bits-service.cc_updates.client_cert:
    description: "PEM-encoded certificate for secure, mutually authenticated TLS communication"
  bits-service.cc_updates.client_key:
    description: "PEM-encoded key for secure, mutually authenticated TLS communication"

  bits-service.proxy_get_requests:
    description: "When set to true, GET requests get proxied through Bits-Service and not redirected to the backend blobstore (such as S3)"
    default: false

  bits-service.registry_endpoint:
    description: "Docker registry endpoint"
  bits-service.enable_registry:
    description: "When set to true, the configured registry is used"
    default: false
